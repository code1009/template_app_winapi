/////////////////////////////////////////////////////////////////////////////
//===========================================================================
#include "pch.hpp"

#include "RuntimeDebug.hpp"
#include "Application.hpp"
#include "dx2d.hpp"





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
namespace mwa
{





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
bool Application::initialize(HINSTANCE hInstance)
{
	//-----------------------------------------------------------------------
	_hInstance = hInstance;


	//-----------------------------------------------------------------------
	HRESULT hr;


	hr = CoInitialize(nullptr);
	if (FAILED(hr))
	{
		return false;
	}


	//-----------------------------------------------------------------------
	if (dx2d::new_factory() == false)
	{
		::CoUninitialize();

		return false;
	}


	//-----------------------------------------------------------------------
	_RuntimeDebug.enableMemoryCheck();


	//-----------------------------------------------------------------------
	_RuntimeDebug.startMemoryLeackCheck();


	return true;
}

void Application::terminate(void)
{
	//-----------------------------------------------------------------------
	_RuntimeDebug.endMemoryLeackCheck();


	//-----------------------------------------------------------------------
	dx2d::delete_factory();


	//-----------------------------------------------------------------------
	::CoUninitialize();


	//-----------------------------------------------------------------------
	_hInstance = nullptr;
}





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
#if 0
Application* getApplication(void)
{
	static Application instance;


	return &instance;
}
#endif





/////////////////////////////////////////////////////////////////////////////
//===========================================================================
}




